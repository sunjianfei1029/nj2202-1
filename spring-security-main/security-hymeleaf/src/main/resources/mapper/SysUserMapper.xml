<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.powernode.security.mapper.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.powernode.security.model.SysUser">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="enabled" jdbcType="INTEGER" property="enabled" />
    <result column="account_no_expired" jdbcType="INTEGER" property="accountNoExpired" />
    <result column="credentials_no_expired" jdbcType="INTEGER" property="credentialsNoExpired" />
    <result column="account_no_locked" jdbcType="INTEGER" property="accountNoLocked" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, username, password, sex, address, enabled, account_no_expired, credentials_no_expired, 
    account_no_locked
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.powernode.security.model.SysUser">
    insert into sys_user (user_id, username, password, 
      sex, address, enabled, 
      account_no_expired, credentials_no_expired, 
      account_no_locked)
    values (#{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{enabled,jdbcType=INTEGER}, 
      #{accountNoExpired,jdbcType=INTEGER}, #{credentialsNoExpired,jdbcType=INTEGER}, 
      #{accountNoLocked,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.powernode.security.model.SysUser">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="accountNoExpired != null">
        account_no_expired,
      </if>
      <if test="credentialsNoExpired != null">
        credentials_no_expired,
      </if>
      <if test="accountNoLocked != null">
        account_no_locked,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=INTEGER},
      </if>
      <if test="accountNoExpired != null">
        #{accountNoExpired,jdbcType=INTEGER},
      </if>
      <if test="credentialsNoExpired != null">
        #{credentialsNoExpired,jdbcType=INTEGER},
      </if>
      <if test="accountNoLocked != null">
        #{accountNoLocked,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.powernode.security.model.SysUser">
    update sys_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=INTEGER},
      </if>
      <if test="accountNoExpired != null">
        account_no_expired = #{accountNoExpired,jdbcType=INTEGER},
      </if>
      <if test="credentialsNoExpired != null">
        credentials_no_expired = #{credentialsNoExpired,jdbcType=INTEGER},
      </if>
      <if test="accountNoLocked != null">
        account_no_locked = #{accountNoLocked,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.powernode.security.model.SysUser">
    update sys_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=INTEGER},
      account_no_expired = #{accountNoExpired,jdbcType=INTEGER},
      credentials_no_expired = #{credentialsNoExpired,jdbcType=INTEGER},
      account_no_locked = #{accountNoLocked,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

  <!-- 根据username 查询 SysUser的信息 -->
  <select id="queryUserByUserName" resultMap="BaseResultMap">
    select
        <include refid="Base_Column_List" />
    from
         sys_user
    where username = #{username}
  </select>

  <!-- 根据userId查询它对应的权限列表 -->
  <select id="queryPersessionByUserId" resultType="java.lang.String">
    select distinct t1.code
    from  sys_menu t1
            inner join sys_role_menu t2
            inner join sys_role_user t3
                       on(t1.id = t2.mid and t2.rid = t3.rid)
    where t3.uid = #{userId} and t1.type = 1
  </select>

</mapper>